##LINK: http://www.jos.org.cn/html/2018/12/5426.htm
##KEYWORDS: open Internet
##TITLE: LFAç®æ³çä¸ç§é«æå®ç°æ¹æ³
##METHOD: paragraphs

äºèç½æåçååæ¯ç¾å½å½é²é¨é«çº§ç ç©¶è®¡åå±è®¾è®¡çé¿å¸ç½(advanced research project agency network, ç®ç§°APRANET), ä»ä»ç±4å°ä¸»æºç»æ, åå±å°ä»å¤©, ä»ä»ç¨äºä¸å°50å¹´çæ¶é´, å¶åå±éåº¦è¿è¿è¶åºäºäººä»¬çæ³è±¡[1, 2].éçäºèç½çå¿«éåå±åè§æ¨¡çéæ¸æ©å¤§, å¶åºç¨å·²ç»å»¶ä¼¸å°äººä»¬çå·¥ä½ãçæ´»ãå­¦ä¹ åå¨±ä¹ç­åä¸ªé¢å, å¹¶ä¸æä¸ºå¨çæå¤§çéä¿¡ç³»ç».æ­£å¦å¾®è½¯é¦å¸­å®Ozzieæè¿°, æä»¬çæ´»å¨ä»¥ç½ç»ä¸ºä¸­å¿çæ¶ä»£[3].
éçäºèç½çåå±, å¶åºç¨èå´åç°åºäºæ¾èçåå.æå, äºèç½ä¸»è¦æ¯æä¸äºéå®æ¶åºç¨, å¦çµå­é®ä»¶ãä¼ è¾æä»¶ç­.ç¶è, å¦ä»å¤§éçå®æ¶ä¸å¡[4-6], å¦IPè¯­é³(voice over Internet protocol, ç®ç§°VoIP)ãè¡ç¥¨å¨çº¿äº¤æãè¿ç¨ææ¯ãè§é¢æµåªä½åå³æ¶éä¿¡ç­, å¨äºèç½ä¸å¤§éä¼ æ­, è¿äºæ°ååºç¨å¯¹è·¯ç±å¯ç¨æ§[7, 8]æåºäºæ´é«çè¦æ±.å æ­¤, è·¯ç±å¯ç¨æ§å°ç´æ¥å½±åç¨æ·çè´¢äº§å®å¨çè³çå½å®å¨.è·¯ç±å¯ç¨æ§æ¯æç¨æ·è½å¤å¾å°è¯·æ±æå¡çæ¦ç, å¯ä»¥è¡¨ç¤ºä¸ºMTTF/(MTTF+MTTR), å¶ä¸­, MTTF(mean time to failure)è¡¨ç¤ºå¹³åæéé´éæ¶é´, MTTR(mean time to repair)è¡¨ç¤ºæéå¹³åä¿®å¤æ¶é´.ä»ä¸è¿°å®ä¹å¯ä»¥ç¥é, å¯ä»¥éè¿å¢å MTTFçå¼ååå°MTTRçå¼æ¥æåè·¯ç±å¯ç¨æ§.ç¶è, åªè½éè¿æé«ç¡¬ä»¶è®¾å¤çè´¨éæ¥å¢å MTTFçå¼, è¿å°ä¼ç»ISPå¸¦æ¥é¢å¤çè´æ.å æ­¤å¨å®éä¸­, ä¸è¬éè¿åå°MTTRçå¼æ¥æé«è·¯ç±å¯ç¨æ§.
ç¸å³ç ç©¶è¡¨æ:ç½ç»ä¸­çæéé¢ç¹åç[9, 10], å¹¶ä¸ä¸å¯é¿å.å¨æéä¿®å¤æé´, è·¯ç±åè®®éè¦ç»åä¸æ®µæ¶é´çæ¶æè¿ç¨, å¨æ­¤è¿ç¨ä¸­, å°ä¼åºç°è·¯ç±é»æ´ãè·¯ç±ç¯è·¯[11, 12]ç­ç°è±¡, ä»èå¯¼è´ç½ç»ä¸­æ­, æ¥æä¸¢å¤±, éä½äºè·¯ç±å¯ç¨æ§.å½ä¸æ¡OC-48çé¾è·¯æ­å¼10s, å°å¯¼è´300ä¸ä¸ªå¤§å°ä¸º1KBçæ¥æä¸¢å¤±[13].å½æéåçæ¶, å®æ¶åºç¨éå¸¸è¦æ±æ¯«ç§çº§çæéä¿®å¤æ¶é´, ç¶èç®åäºèç½é¨ç½²çååè·¯ç±åè®®, å¦OSPFåIS-IS, éè¦å ç§çè³å åç§çæ¶é´æ¥å®ææ¶æ, ç®åäºèç½é¨ç½²çè·¯ç±åè®®æ æ³æ»¡è¶³å®æ¶åºç¨å¯¹è·¯ç±å¯ç¨æ§çè¦æ±[14, 15].å æ­¤, å¦ä½æé«ååè·¯ç±å¯ç¨æ§[16, 17], æä¸ºäºèç½äºå¾éè¦è§£å³çä¸ä¸ªé®é¢.
éå¯¹äºèç½è·¯ç±çå¯ç¨æ§é®é¢, è¶æ¥è¶å¤çç§ç å·¥ä½èå¼å§æèº«å°ç ç©¶å¦ä½æåç½ç»å¿«éåºå¯¹æéçè½å[18-21].æé«è·¯ç±å¯ç¨æ§çæ¹æ¡[22]å¯ä»¥åä¸ºä¸¤ç±»:è¢«å¨æ¢å¤æ¹æ¡åè·¯ç±ä¿æ¤æ¹æ¡.å¶ä¸­, è¢«å¨æ¢å¤æ¹æ¡ä¸»è¦ç ç©¶å½ç½ç»åºç°æéæ¶, å¦ä½å å¿«è·¯ç±æ¶æéåº¦, å°½éåå°ç½ç»ä¸­æ­æ¶é´.ç¶èå½ç½ç»ä¸­çé¾è·¯é¢ç¹æ­å¼æ¶, è¯¥æ¹æ¡å¯è½å¯¼è´è·¯ç±ä¸ç¨³å®.å æ­¤, è¯¥æ¹æ¡å¿é¡»æè¡¡è·¯ç±æ¶æéåº¦åè·¯ç±ç¨³å®æ§.ä¸è¢«å¨æ¢å¤æ¹æ¡ç¸æ¯è¾, è·¯ç±ä¿æ¤æ¹æ¡æ´åå­¦æ¯çéç.è·¯ç±ä¿æ¤æ¹æ¡çåºæ¬ææ³æ¯:æ ¹æ®ç¸å³è§åäºåè®¡ç®å¤ä»½è·¯ç±, å½ç½ç»ä¸­åºç°æéæ¶, å©ç¨äºåè®¡ç®çå¤ä»½è·¯ç±è½¬åæ°æ®å, ä»èæå¤§ååå°æ¥æä¸¢å¤±, ç¼©ç­ç½ç»æå¡ä¸­æ­æ¶é´[23].
æ ¹æ®æ¥æè½¬åæ¹å¼, å¯ä»¥å°è·¯ç±ä¿æ¤æ¹æ¡åä¸ºä¸¤ç§æ¹å¼:éè·³è½¬ååééè·³è½¬å.åºäºéè·³è½¬åçè·¯ç±ä¿æ¤æ¹æ¡åç®åäºèç½é¨ç½²çååè·¯ç±åè®®çè½¬åæ¹å¼æ¯ä¸è´ç, å®¹æé¨ç½², å æ­¤åå°å·¥ä¸çåå­¦æ¯ççå³æ³¨; èééè·³è½¬åæ¹å¼éè¦åå©è¾å©æºå¶, å¦Not-Via[24]ãé§éææ¯(tunnel)[25]ãå¤åè®®æ ç­¾äº¤æ¢(multi-protocol label switching, ç®ç§°MPLS)[26]æ¥è½¬åæ¥æ, è¯¥æºå¶é¨ç½²å¤æ, ç»è·¯ç±å¨å¸¦æ¥äºä¸å®çè´æ.å¹¶ä¸è®¸å¤ISPå¸æå¨çº¯IPç½ç»ä¸­å®ç°è·¯ç±ä¿æ¤æ¹æ¡, ä»¥åå°ç½ç»éç½®, éä½è¿è¥ææ¬, å æ­¤, æ¬æç ç©¶åºäºéè·³è½¬åæ¹å¼çè·¯ç±ä¿æ¤æ¹æ¡. LFA(loop-free alternate)[27]æ¯ä¸ç§å¸åçè·¯ç±ä¿æ¤æ¹æ¡, è¯¥æ¹æ¡éç¨éè·³è½¬åæ¹å¼, å®ç°ç®å, å®¹æé¨ç½², æ¯ç°å¨äºèç½å¯ä¸é¨ç½²çååè·¯ç±ä¿æ¤æ¹æ¡.ç¶è, LFAçå®ç°æ¹å¼å­å¨ä»¥ä¸ä¸¤ä¸ªæ¹é¢çé®é¢.
(1) ä¸ºäºå®ç°LFA, è®¡ç®èç¹éè¦æé å¤æ£µæç­è·¯å¾æ .ç¸å³ç ç©¶è¡¨æ, æé æç­è·¯å¾æ éè¦æ¶èå¤§éçè®¡ç®èµæº[28-30].å æ­¤, LFAç®æ³å¤æåº¦è¿é«, å¹¶ä¸ç®æ³å¤æåº¦éçç½ç»èç¹åº¦æ°çå¢å èå¢å [31], éä½äºè·¯ç±å¨çæ§è½;
(2) æ²¡ææç¡®è§å®å¦ä½ä»ææå¯éä¸ä¸è·³ä¸­éæ©åªä¸ªä½ä¸ºæç»çå¤ä»½ä¸ä¸è·³, å¦æéç¨éæºéæ©ç®æ³, åå¯è½å¯¼è´éè·¯ç±è·¯å¾çæä¼¸åº¦è¿å¤§, ä»èæµªè´¹å¤§éçç½ç»å¸¦å®½èµæº.
å æ­¤, å¦ä½éä½LFAæ¹æ¡çç®æ³æ¶é´å¤æåº¦[31]åéè·¯ç±è·¯å¾çæä¼¸åº¦, æ¯ä¸ä¸ªéè¦çç ç©¶é®é¢.å¨æç®[31]ä¸­, ç¸å³ä½èæåºå©ç¨TBFHç®æ³æ¥éä½LFAä¸­é¾è·¯ä¿æ¤æ¹æ¡å®ç°æ¹å¼çå¤æåº¦.ç ç©¶è¡¨æ, è¯¥æ¹æ¡éä½äºLFAæ¹æ¡ä¸­é¾è·¯ä¿æ¤æ¹æ¡å®ç°æ¹å¼çå¤æåº¦.ç¶è, è¯¥æ¹æ¡å·æä¸é¢å ä¸ªç¼ºç¹:(1)æ²¡æèèLFAä¸­èç¹ä¿æ¤æ¡ä»¶; (2)æéä¿æ¤çè¾ä½; (3)æ²¡æèèéè·¯ç±è·¯å¾çæä¼¸åº¦; (4)æ²¡æèèéå¯¹ç§°æå¼ç½ç»ä¸­TBFHçå®ç°æ¹å¼.éå¯¹å·²æç ç©¶å­å¨çé®é¢, æ¬ææåºäºä¸ç§è½»éçº§çåºäºéè·³è½¬åæ¹å¼çè·¯ç±ä¿æ¤æ¹æ¡, è¯¥ç®æ³ä¸ä»å·æè¾å°çæ¶é´å¤æåº¦, å¹¶ä¸éè·¯ç±è·¯å¾å·æè¾å°çè·¯å¾æä¼¸åº¦, åæ¶å¯ä»¥æä¾åLFAåæ ·çæéä¿æ¤ç.æ¬æéè¿ä¸¥æ ¼æ¨çå¾åºå¦ä¸ç»è®º:å½ç½ç»ä¸­åºç°åæéæ¶, åªéè¦ä¸ºç¹ç¹èç¹è®¡ç®å¤ä»½ä¸ä¸è·³, èå¶ä½åè¯¥æéå½±åçèç¹çå¤ä»½ä¸ä¸è·³åè¯¥ç¹å®èç¹çå¤ä»½ä¸ä¸è·³æ¯ç¸åç.åºäºè¯¥æ§è´¨, åå«è®¨è®ºäºå¯¹ç§°é¾è·¯æå¼ç½ç»åéå¯¹ç§°é¾è·¯æå¼ç½ç»å¯¹åºçç®æ³.å½ç½ç»ä¸­çé¾è·¯æå¼å¯¹ç§°æ¶, æåºäºä¸ç§çº¿æ§æ¶é´å¤æåº¦çè·¯ç±ä¿æ¤æ¹æ¡, è¯¥ç®æ³çæ¶é´å¤æåº¦ä¸ºO(2Â·E+V), è¶è¶äºå·²æçææç®æ³çè®¡ç®æ§è½.ç¸å, å½ç½ç»ä¸­çé¾è·¯æå¼ä¸å¯¹ç§°æ¶, æ¬ææåºçç®æ³çè®¡ç®æ¶é´è¿è¿å°äºæé ä¸æ£µæç­è·¯å¾æ çæ¶é´.
æ¬æç¬¬1èä»ç»ç¸å³å·¥ä½.ç¬¬2èæ¯é®é¢æè¿°.ç¬¬3èåç¬¬4èåå«ä»ç»å¯¹ç§°æå¼ç½ç»åéå¯¹ç§°æå¼ç½ç»å¯¹åºçè·¯ç±ä¿æ¤ç®æ³.ç¬¬5èå¯¹ç®æ³è¿è¡è®¨è®º.ç¬¬6èéè¿å®éªæ¨¡æå¹¶ä¸è¯ä»·ç®æ³.ç¬¬7èæ¯ç»è®ºåä¸ä¸æ­¥ç ç©¶æ¹å.
äºèç½å¨è®¾è®¡ä¹åå°±éå¸¸éè§è·¯ç±å¯ç¨æ§, è®¾è®¡äºå¨æè·¯ç±åè®®æ¥åºå¯¹ç½ç»æé.å¯¹äºç®åäºèç½é¨ç½²çååè·¯ç±åè®®, åé¾è·¯æéæèåèç¹æéå°±å¯å¯¼è´å¨ç½çè·¯ç±éè®¡ç®åè·¯ç±æ¶æ.å¨è·¯ç±æ¶æè¿ç¨ä¸­, åä¸ªè·¯ç±å¨é½è¦éæ°è®¡ç®è·¯ç±, å æ­¤å¯è½å¯¼è´æ¥æä¸¢å¤±.äºèç½é¨ç½²çååè·¯ç±åè®®æ¶ææ¶é´è¿é¿, æ æ³æ»¡è¶³å®æ¶åºç¨å¯¹ç½ç»æ¶å»¶çè¦æ±.å æ­¤, å­¦æ¯çåå·¥ä¸çæåºå©ç¨è·¯ç±ä¿æ¤æ¹æ¡æ¥æé«è·¯ç±å¯ç¨æ§.æ ¹æ®å·¥ä½æ¹å¼çä¸å, å¯ä»¥å°è·¯ç±ä¿æ¤æ¹æ¡åä¸ºè¢«å¨æ¢å¤æ¹æ¡åè·¯ç±ä¿æ¤æ¹æ¡, å¶ä¸­:è¢«å¨æ¢å¤æ¹æ¡ä¸»è¦å³æ³¨å½ç½ç»åºç°æéçæ¶å, å¦ä½å å¿«è·¯ç±æ¶æéåº¦; ä¸»å¨ä¿æ¤æ¹æ¡éè¿é¢åè®¡ç®å¤ç¨è·¯å¾, å½ç½ç»åºç°æéçæ¶å, æ£æµå°æéçç»ç¹ç«å³å¯ç¨å¤ç¨è·¯å¾, ä»èå¯ä»¥ææåå°ç½ç»ä¸­æ­çæ¶é´.ä¸é¢å°åå«ä»ç»è¿ä¸¤ç§æ¹æ¡.
(1) è°æ´ååè·¯ç±åè®®åæ°
æç®[28-30]éè¿è°æ´ååè·¯ç±åè®®æ¶æè¿ç¨ä¸­åä¸ªé¶æ®µçåæ°æ¥å å¿«è·¯ç±æ¶æè¿ç¨.
âÂ Â æéæ£æµé¶æ®µ, å å¿«Helloåçåéé¢ç, ä»èå å¿«æéæ£æµçéåº¦;
âÂ Â æééç¥é¶æ®µ, å¨æè°æ´é¾è·¯ç¶æå¹¿æ­(link-state advertisement, ç®ç§°LSA)åéæ¶é´, å å¿«æéä¼ æ­éåº¦;
âÂ Â è·¯ç±è®¡ç®é¶æ®µ, éç¨å¢éæç­è·¯å¾ä¼åç®æ³(incremental shortest path first, ç®ç§°i-SPF)[35]å å¿«æç­è·¯å¾æ çæ´æ°æ¶é´.
è¯¥æ¹æ¡éè¿è°æ´ååè·¯ç±åè®®çé»è®¤åæ°æ¥å å¿«è·¯ç±æ¶æéåº¦, å®ç°ç®å, å®¹æé¨ç½².ç¶èè¯¥æ¹æ¡å®¹æå¼èµ·è·¯ç±éè¡, ä»èå½±åè·¯ç±ç¨³å®æ§, å¹¶ä¸ç»è·¯ç±å¨å¸¦æ¥äºé¢å¤çè´æ, å¢å äºç½ç»å¼é.
(2) ä¿®æ¹é¾è·¯æå¼
é¾è·¯æå¼å¨è·¯ç±çè®¡ç®ä¸­æ®æ¼çéè¦çè§è², ç½ç»ç®¡çåå¯ä»¥éè¿ä¿®æ¹é¾è·¯æå¼æ¥è§£å³é¾è·¯æ¥å¡åè·¯ç±ç¯è·¯ç­é®é¢.å½ç½ç»ç®¡çåéè¦å³é­ææ¡é¾è·¯æ¶, å¦æç´æ¥å°å¶ä»£ä»·è®¾ç½®ä¸ºæ ç©·å¤§, åå¯è½å¼èµ·è·¯ç±ç¯è·¯, ä»èé ææ¥æä¸¢å¤±.å æ­¤, ä½èå¨æç®[36]ä¸­æåºæ ç¯è·¯æ¶ææ¡ä»¶(loop free convergence, ç®ç§°LFC)æ¥å¤çè¯¥é®é¢.ä½èè¯æ:å¦ææç§ä¸å®çæå¼åºåä¿®æ¹ææ¡é¾è·¯çä»£ä»·, åè·¯ç±æ¶æè¿ç¨å°ä¸ä¼åºç°è·¯ç±ç¯è·¯.å æ­¤, æç»å¯ä»¥å°è¯¥é¾è·¯å³é­.ç¶è, è¯¥æ¹æ¡åªéåé¢ç¥çé¾è·¯æé, æ æ³éåºçªåæé.
(1) ECMP
ç­ä»·å¤è·¯å¾è·¯ç±(equal cost multiple paths, ç®ç§°ECMP)[37]æ¢æ¯æç®åä¹æ¯ææ©ä½¿ç¨çè·¯ç±ä¿æ¤æ¹æ¡.å¦ææºèç¹å°ç®çèç¹æå¤æ¡è·¯å¾å·æç¸åçæå°ä»£ä»·, åå¯ä»¥å°å¶ä½ä¸ºå¤ä»½è·¯å¾.è¯¥æ¹æ¡å®ç°ç®å, å®¹æé¨ç½², ç¶èè¦æ±å¤ä»½è·¯å¾å¿é¡»å·æç¸åçæå°ä»£ä»·, å æ­¤, ECMPæ¹æ¡å¯¹è·¯ç±å¯ç¨æ§çè´¡ç®å¹¶ä¸æ¯å¾å¤§.ç¸å³ç ç©¶éè¿è°æ´é¾è·¯æå¼æ¥éç½®ç¸åä»£ä»·çæç­è·¯å¾, ç¶èè¯¥é®é¢è¢«è¯å®æ¯NP-Hardé®é¢[38].
(2) IPFRR
IETFæåºå©ç¨IPå¿«ééè·¯ç±æ¡æ¶(IP fast re-route, ç®ç§°IPFRR)[27]æ¥ç¼è§£å ç½ç»æéé æçæ¥æä¸¢å¤±ç, å°½éç¼©ç­ç½ç»ä¸­æ­æ¶é´.LFAæ¯åºäºIPFRRæ¡æ¶æåºçä¸ç§è§£å³æ¹æ¡, è¯¥æ¹æ¡å®ç°ç®å, å æ­¤å¾å°äºè·¯ç±å¨ååçæ¯æ, æ¯ç°å¨å¯ä¸é¨ç½²ååè·¯ç±ä¿æ¤æ¹æ¡.å¨RFC5286ä¸­, IETFåå¸äºIPFRRçåºæ¬æ¡æ¶, æåºäºLFAçå®ç°å½¢å¼, å¶ä¸­åæ¬åé¾è·¯ä¿æ¤æ¡ä»¶(loop free condition, ç®ç§°LFC)ãåèç¹ä¿æ¤æ¡ä»¶(node protection condition, ç®ç§°NPC)åå¹¶åæéä¿æ¤æ¡ä»¶(downstream condition, ç®ç§°DC).ç¶è, å·²æçéå¯¹LFAçå®ç°æ¹å¼å­å¨ä¸¤ä¸ªæ¹é¢çé®é¢:â ç®æ³å¤æåº¦é«, æ¯ä¸ªè·¯ç±å¨éè¦ä¸ºå¶é»å±èç¹æé æç­è·¯å¾æ , ç®æ³å¤æåº¦éçç½ç»ä¸­èç¹åº¦æ°çå¢å èå¢å , å æ­¤å®ç°ä»£ä»·è¾å¤§; â¡æ²¡æè§å®å¦ä½ä»å¯éä¸ä¸è·³ä¸­éæ©æç»å¤ä»½ä¸ä¸è·³, å æ­¤é æéè·¯ç±è·¯å¾æä¼¸åº¦è¾å¤§.ç¸å³ç ç©¶[32]è¡¨æ, LFAçåæéä¿æ¤çå¨50%å·¦å³.æç®[33]éè¿è°æ´é¾è·¯æå¼è¿ä¸æ­¥æé«LFAçæéä¿æ¤ç, å®éªç»æè¡¨æ:å¨å¤§å¤æ°ç½ç»å¾ä¸­, è¯¥æ¹æ¡é½å¯ä»¥å¾å°è¾å¥½çç»æ; ç¶èå¯¹äºæäºç¨çå¾, è¯¥æ¹æ¡æªè½è¾¾å°çæ³çææ.éå¯¹è¯¥é®é¢, æç®[34]ç ç©¶äºç½ç»ææåLFAæéä¿æ¤çä¹é´çå³ç³», éè¿ä¿®æ¹ç½ç»ææç»ææ¥å¢å LFAçæéä¿æ¤ç.å®éªç»æè¡¨æ:è¯¥æ¹æ¡åªéè¦å¨ç½ç»ä¸­å¢å æå°æ°çè¾¹, å°±å¯ä»¥å¤§å¹åº¦æé«LFAçæéä¿æ¤ç.æ¬ææåºçæ¹æ¡å¯ä»¥å¨æç®[33, 34]çåºç¡ä¸æ§è¡, å æ­¤å©ç¨è¯¥ææ¯å¯ä»¥å¤§å¤§æé«æ¬ææ¹æ¡çæéä¿æ¤ç.
(3) è·¯ç±åè½¬
åºäºIPFRRçåºæ¬ææ³, ä½èæåºå©ç¨è·¯ç±åè½¬[39]æ¹æ¡æ¥æé«è·¯ç±å¯ç¨æ§.è·¯ç±åè½¬çæ ¸å¿ææ³æ¯:é¦å, å©ç¨æ ç¯è·¯è§åè®¡ç®æºèç¹å°ç®çèç¹çææå¯éä¸ä¸è·³; å¶æ¬¡, å©ç¨æ ç­¾ææ¯å®ç°æ¥æççµæ´»è½¬å.è½ç¶è¯¥æ¹æ¡å¯ä»¥æé«è·¯ç±å¯ç¨æ§, ä½æ¯è¯¥æ¹æ¡å®ç°å¤æ, å¼éè¾å¤§, é¾ä»¥å®éé¨ç½².
(4) MRC
å¤éç½®è·¯ç±(multiple routing configurations, ç®ç§°MRC)[40]çåºæ¬ææ³æ¯:æ¯ä¸ªè·¯ç±å¨ä¿å­å¤ä¸ªéç½®å¾, æ¯ä¸ªéç½®åæ¬ææçèç¹åé¾è·¯, éè¿è°æ´é¾è·¯æå¼, ä»èä½¿å¾é¨åèç¹åé¾è·¯å¨è¯¥éç½®ä¸­å¾å°ä¿æ¤, æç»æé åºéå¯¹ææå¯è½åºç°çåæéçéç½®å¾.å½æ¥æå¨è½¬åè¿ç¨ä¸­éå°æéæ¶, å¯ä»¥å©ç¨äºåéç½®å¥½çè·¯ç±è½¬åè¯¥æ¥æ.ç¶èå¨ç°å®ç½ç»ä¸­, è¯¥æ¹æ¡éè¦è¾å¤çéç½®, éè¦æ¶èå¤§éçè®¡ç®èµæºåå­å¨å¼é.
(5) FCP
FCP(failure carrying packet)[41]çåºæ¬ææ³æ¯:å°æ¥æå¨è½¬åè¿ç¨ä¸­éå°çæéä¿¡æ¯å­å¨å¨è¯¥æ¥æçå¤´é¨, å½æ¥æå°è¾¾æä¸ªèç¹æ¶, è¯¥èç¹é¦åæ£æµè¯¥æ¥æå¤´é¨çæéä¿¡æ¯å­æ®µ, æ ¹æ®è¯¥å­æ®µæé æ°çææç»æ; ç¶å, å©ç¨æ°çææç»æéæ°è®¡ç®æç­è·¯å¾, ä»èå®ç°æ¥æçæ ç¯è·¯è½¬å.è¯¥æ¹æ¡æå¤§çå¥½å¤æ¯æ¶é¤äºè·¯ç±æ¶æè¿ç¨, ç¶èè®¡ç®å¤æåº¦é«, å¯¹è·¯ç±åè®®çæ¹å¨æ¯è¾å¤§, ä¸å®¹æå®éé¨ç½².
(6) åºäºNot-Viaå°åçå¿«ééè·¯ç±
æç®[42]æåºäºåºäºNot-Viaå°åçå¿«ééè·¯ç±æ¹æ¡.è¯¥æºå¶ä½¿ç¨ç¹æ®å°åNot-Viaæ¾ç¤ºè¡¨æç½ç»ä¸­çæé, å¨è½¬åæ¥æçè¿ç¨ä¸­ææé¿å¼è¯¥æé.å½æ¥æå¨è½¬åè¿ç¨ä¸­éå°æéæ¶, è¯¥æ¥æå°ä¼è¢«å°è£æç¹æ®å½¢å¼çæ¥æ, ç¶åè½¬åå°åéçä¸­è½¬èç¹, æå, ä¸­è½¬èç¹å¯¹è¯¥æ¥æè§£å°è£, å¹¶ä¸æç§æç­è·¯å¾è½¬åè¯¥æ¥æ.ç¶è, è¯¥æ¹æ¡éè¦è¾å©å°åçåå©, è®¡ç®å¼éåå­å¨å¼éè¾å¤§, ä¸æ¯æå¢éé¨ç½², å æ­¤å¾é¾å¾å°ISPçæ¯æ.
(7) MPLS
å©ç¨MPLSå¯ä»¥å¿«éãçµæ´»è½¬åæ°æ®å, å®ä¸ºç½ç»ç®¡çåæä¾äºä¾¿æ·çéç½®æ¹å¼.ç¶èMPLSçæ§å¶åç®¡çå¼éè¾å¤§, å°¤å¶å½æ ç­¾äº¤æ¢è·¯å¾(LSP)çæ°éè¾å¤çæ¶å.ç¸å³ç ç©¶è¡¨æ[42]:ç®å, äºèç½ä¸­å·²ç»é¨ç½²MPLSçASæ°éä»ä»å¨7%å·¦å³.
æ¬èå°æè¿°ç½ç»æ¨¡å, å¹¶ä¸å¨è¡¨ 1ä¸­ååºäºæ¬æç¨å°çææç¬¦å·.ç½ç»å¯ä»¥è¡¨ç¤ºä¸ºå¸¦ææåå¾G=(V, E), å¶ä¸­, Vè¡¨ç¤ºç½ç»ä¸­è·¯ç±å¨(èç¹)çéå, Eè¡¨ç¤ºç½ç»ä¸­é¾è·¯çéå.å¯¹äºç½ç»ä¸­ä»»æä¸æ¡é¾è·¯(i, j)$\in $E, w=(i, j)è¡¨ç¤ºè¯¥é¾è·¯çä»£ä»·, å¯¹äºç½ç»ä¸­ä»»æèç¹$\forall $x$\in $V, neighbor(x)è¡¨ç¤ºèç¹xçé»å±éå.å¯¹äºç½ç»ä¸­ä»»æä¸¤ä¸ªèç¹$\forall $x, y$\in $V, cost(x, y)è¡¨ç¤ºèç¹xå°èç¹yçæç­è·¯å¾çä»£ä»·.å¯¹äºä»»æèç¹$\forall $v$\in $V, spt(v)è¡¨ç¤ºä»¥èç¹vä¸ºæ ¹çæç­è·¯å¾æ , åå«äºèç¹vå°è¾¾å¶ä½èç¹çæç­è·¯å¾.å¨æç­è·¯å¾æ spt(v)ä¸­, å¯¹äºè¯¥æ ä¸­çä»»æèç¹$\forall $u$\in $V, subtree(v, u)è¡¨ç¤ºå¨spt(v)ä¸­ä»¥èç¹uä¸ºæ ¹çå­æ ä¸­èç¹çéå, child(v, u)è¡¨ç¤ºå¨spt(v)ä¸­, èç¹uçå­©å­èç¹çéå.åè®¾æºå°åä¸ºs, ç®çå°åä¸ºd, bestn(s, d)è¡¨ç¤ºèç¹så°èç¹dçæä¼ä¸ä¸è·³, backn(s, d)è¡¨ç¤ºèç¹så°èç¹dçå¤ä»½ä¸ä¸è·³, sp(s, d)è¡¨ç¤ºèç¹så°èç¹dçæç­è·¯å¾.å¯¹äºä»»æèç¹$\forall $v$\in $V, rspt(v)è¡¨ç¤ºä»¥èç¹vä¸ºæ ¹çååæç­è·¯å¾æ , å³:ä»¥èç¹vä¸ºæ ¹çæ±èæ , åå«äºææèç¹å°è¾¾èç¹vçæç­è·¯å¾.å¯¹äºè¯¥æ ä¸­çä»»æèç¹$\forall $u$\in $V, rsubtree(v, u)è¡¨ç¤ºå¨rspt(v)ä¸­ä»¥èç¹uä¸ºæ ¹çå­æ ä¸­èç¹çéå.
ç®å, äºèç½é¨ç½²çååè·¯ç±åè®®å¦OSPF, æ¯ä¸ªèç¹æ ¹æ®é¾è·¯ç¶ææ°æ®åºä¸­çææä¿¡æ¯æé ä»¥èªèº«ä¸ºæ ¹çæç­è·¯å¾æ , æ ¹æ®è¯¥æ è®¡ç®åºå°ææç®ççæä¼ä¸ä¸è·³.å½èç¹å°ç®ççæä¼ä¸ä¸è·³åºç°æéæ¶, åå¾è¯¥ç®çå°åçæ¥æå°ä¼è¢«ä¸¢å¼.ä¸ºäºçµæ´»åºå¯¹ç½ç»ä¸­ççªåæé, IETFå¨RFC5286ä¸­åå¸äºLFAæ å, å¶ä¸­åæ¬æ ç¯è·¯æ¡ä»¶(loop free condition, ç®ç§°LFC)ãèç¹ä¿æ¤æ¡ä»¶(node protection condition, ç®ç§°NPC).
âÂ Â  LFC:åè®¾ç®çå°åä¸ºd, å¦æ(s, u)$\in $sp(s, d), å½é¾è·¯(s, u)åºç°æéæ¶, èç¹så¯ä»¥å°æ¥æè½¬åç»å¶é»å±m$\in $neighbor(s), å½ä¸ä»å½æ»¡è¶³cost(m, d) < cost(m, s)+cost(s, d);
âÂ Â  NPC:åè®¾ç®çå°åä¸ºd, å¦æ(s, u)$\in $sp(s, d), å½èç¹uåºç°æéæ¶, så¯ä»¥å°æ¥æè½¬åç»å¶é»å±m$\in $ neighbor(s), å½ä¸ä»å½æ»¡è¶³cost(m, d) < cost(m, u)+cost(u, d).
ä¸ºäºå®ç°LFC, èç¹séè¦è·å¾cost(m, d), cost(m, s)åcost(s, d)çå·ä½æ°å¼, å¶ä¸­, cost(s, d)å¯ä»¥ä»spt(s)ä¸­å¾åº, ècost(m, d)éè¦ä»spt(m)ä¸­å¾åº.å æ­¤, ä¸ºäºè·å¾cost(m, s)åcost(m, d)çæ°å¼, èç¹séè¦æé ä¸æ£µä»¥mä¸ºæ ¹çæç­è·¯å¾æ .å½èç¹sækä¸ªé»å±èç¹æ¶, ä¸ºäºè·å¾å¶ææé»å±å°ç®ççæå°ä»£ä»·, èç¹séè¦æé kæ£µæç­è·¯å¾æ .ä»ä¸é¢çåæå¯ç¥, å®ç°LFCçå¤æåº¦ä¸è¿è¡ç®æ³çèç¹çåº¦æ°å¯åç¸å³.å æ­¤, è¯¥å®ç°æ¹å¼çæ©å±æ§è¾å·®.å ä¸ºNPCçå®ç°æ¹å¼åLFCçå®ç°æ¹å¼æ¯ç¸åç, æä»¥ä¸åè¯¦ç»éè¿°.
ä¸é¢ä¸¾ä¾è¯´æå·²æçLFCå®ç°æ¹å¼.å¾ 1è¡¨ç¤ºä»¥èç¹sä¸ºæ ¹çæç­è·¯å¾æ , å¶ä¸­, å®çº¿è¡¨ç¤ºè¯¥æ ä¸çé¾è·¯, èçº¿åè¡¨ç¤ºä¸å¨è¯¥æ ä¸çé¾è·¯.ä¸ºäºå®ç°LFC, èç¹séè¦æé ä»¥å¶é»å±èç¹(uåh)ä¸ºæ ¹çæç­è·¯å¾æ ; ä¸ºäºå®ç°NPC, èç¹séè¦æé ä»¥å¶é»å±èç¹çå­©å­èç¹(b, c, iåj)ä¸ºæ ¹çæç­è·¯å¾æ .å æ­¤, è¯¥å®ç°æ¹å¼çå¤æåº¦éçç½ç»èç¹åº¦æ°çå¢å èå¢å , ä¸å©äºLFAæ¹æ¡çå®éé¨ç½².
å æ­¤, ä¸ºäºéä½LFAç®æ³çå¤æåº¦, æ¬æé¦åæåºä¸é¢å®ç.å®ç1ç»åºäºå¦ä½ä¸ºå­æ subtree(s, u)ä¸­çææèç¹è®¡ç®å¤ä»½ä¸ä¸è·³, æ ¹æ®è¯¥å®çå¯ç¥, è¯¥å­æ ä¸­ææèç¹çå¤ä»½ä¸ä¸è·³åèç¹uçå¤ä»½ä¸ä¸è·³æ¯ç¸åç.æ ¹æ®å®ç1å¯ç¥:å¨spt(s)ä¸­, ä¸ºäºä¿æ¤é¾è·¯(s, u)å(s, h), åªéè¦ä¸ºèç¹uåhè®¡ç®å¤ä»½ä¸ä¸è·³.åæ ·, ä¸ºäºä¿æ¤èç¹uåh, åªéè¦ä¸ºèç¹b, c, iåjè®¡ç®å¤ä»½ä¸ä¸è·³.å æ­¤, ä¸ºäºä¿æ¤ç½ç»ä¸­çé¾è·¯åèç¹, ç®æ³åªéè¦ä¸ºç¹å®çèç¹è®¡ç®å¤ä»½ä¸ä¸è·³å³å¯, å®å¨æ²¡æå¿è¦ä¸ºç½ç»ä¸­ææèç¹è®¡ç®å¤ä»½ä¸ä¸è·³, è¿å°éä½ç®æ³çæ¶é´å¤æåº¦, åè½»è·¯ç±å¨çè´æ.ä¸é¢å°å¨ä¸¤ç§ç±»åçç½ç»ä¸­åå«è®¨è®ºå¦ä½ä¸ºä¸è¿°è¿äºç¹å®èç¹è®¡ç®å¤ä»½ä¸ä¸è·³.
å®ç1.å¦æbackn(s, u)=n, å¯¹äºä»»æèç¹å¦æm$\in $subtree(s, u), ån$\in $backn(s, m).
è¯æ:å ä¸ºbackn(s, u)=n, æä»¥,
ç±å¬å¼(1)å¯å¾:
ç±äºm$\in $subtree(s, u), å¯ç¥:
æ ¹æ®å¬å¼(2)åå¬å¼(3)å¯å¾:
å ä¸º,
æä»¥ç±å¬å¼(4)åå¬å¼(5)å¯å¾cost(n, s)+cost(s, m) > cost(n, m), å³n$\in $backn(s, m).å®çå¾è¯.
å½ç½ç»ä¸­é¾è·¯æå¼å¯¹ç§°æ¶, å³:å¯¹äºä»»æé¾è·¯(i, j)$\in $E, é½æw=(i, j)=w=(j, i)æç«; åæ¶, å¯¹äºç½ç»ä¸­ä»»æä¸¤ä¸ªèç¹$\forall $x, y$\in $V, é½æcost(x, y)=cost(y, x).å©ç¨ä¸è¿°ä¸¤ä¸ªæ§è´¨, å¯ä»¥ä¼åLFCåNPCçå®ç°æ¹å¼, ä»èè®¾è®¡åºé«æçç®æ³.ä¸é¢å°åå«ä»ç»é¾è·¯ä¿æ¤ç®æ³åèç¹ä¿æ¤ç®æ³.
æ ¹æ®å®ç1å¯ç¥:å¨spt(s)ä¸­, å½é¾è·¯(s, u)$\in $spt(s)æ¶, ä¸ºäºä¿æ¤é¾è·¯(s, u), èç¹séè¦ä¸ºèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³.ä¸é¢çå®çç»åºäºè®¡ç®å¤ä»½ä¸ä¸è·³çä¸ä¸ªéè¦æ§è´¨, å©ç¨è¯¥æ§è´¨å¯ä»¥éä½ç®æ³å¤æåº¦.
å®ç2.å½ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, å¦æ(s, u)$\in $sp(s, u)å¹¶ä¸backn(s, u)â $\emptyset $, åå¿å®å­å¨ä¸æ¡é¾è·¯(x, y), ä»èä½¿å¾x$\in $subtree(s, u), y$\notin $subtree(s, u), bestn(s, y)$\in $backn(s, u)åæ¶æç«.
å®ç2æä¾äºå¦ä½ä¸ºèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³çæ¹æ³:éåsubtree(s, u)ä¸­çèç¹å¹¶ä¸æ£æµå¶é»å±èç¹, è¿äºé»å±èç¹å¿é¡»æ»¡è¶³ä¸å¨subtree(s, u)ä¸­å¹¶ä¸æ»¡è¶³é¾è·¯ä¿æ¤çæ¡ä»¶.è¯¥æ¡ä»¶å°å¨å®ç3ä¸­ç»åº.å¨å¾ 1ä¸­, å¦æbackn(s, u)â $\emptyset $ä¸ºäºè®¡ç®èç¹uçå¤ä»½ä¸ä¸è·³, éåsubtree(s, u)ä¸­çææèç¹, å¿å®è½æ¾å°ä¸æ¡é¾è·¯(x, y), ä½¿å¾x$\in $ subtree(s, u), y$\notin $subtree(s, u)åh$\in $backn(s, u)åæ¶æç«, å³, èç¹uçå¤ä»½ä¸ä¸è·³ä¸ºh.å½é¾è·¯(s, u)æ­£å¸¸å·¥ä½æ¶, èç¹så°subtree(s, u)ä¸­ææèç¹çæä¼ä¸ä¸è·³ä¸ºu; å½é¾è·¯(s, u)åºç°æéæ¶, èç¹så°subtree(s, u)ä¸­ææèç¹çå¤ä»½ä¸ä¸è·³ä¸ºh.ä¸ºäºè¯æå®ç2çæ­£ç¡®æ§, é¦åè¯æå ä¸ªå¼ç.
å¼ç1.å½ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, å¦æ(s, u)$\in $sp(s, u), åsubtree(s, u)$\cap $subtree(u, s)=$\emptyset $.
è¯æ:ä¸é¢å°ä½¿ç¨åè¯æ³æ¥è¯æè¯¥å®ç.åè®¾subtree(s, u)$\cap $subtree(u, s)=v.å æ­¤, ä¸æ¹é¢å¨spt(u)ä¸­, s$\in $sp(v, u); å¦ä¸æ¹é¢å¨spt(s)ä¸­, å ä¸ºuæ¯sçå­©å­èç¹, ås$\notin $sp(v, u), å æ­¤å¾åºçç¾.å³åè®¾ä¸æç«.å®çå¾è¯.
å¼ç2.å½ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, V-subtree(s, u)=subtree(u, s)+V', å¶ä¸­, V'ä¸ºç½ç»ä¸­å©ä½èç¹.
è¯æ:æ ¹æ®å¼ç1å¯ç¥subtree(s, u)$\cap $subtree(u, s)=$\emptyset $ç½ç»ä¸­ææèç¹å¯ä»¥åä¸º3ç§ç±»å, ä¸é¨åèç¹åå«å¨subtree(s, u), å¦å¤ä¸é¨ååå«å¨subtree(u, s)ä¸­, å¶ä½ä¸ºç½ç»ä¸­å©ä½èç¹, å æ­¤, ç½ç»ä¸­èç¹å¯ä»¥è¡¨ç¤ºä¸º
å¼ç3.å½ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, å¯¹äºèç¹p$\in $V, å¦æs$\in $sp(p, u), ås$\in $sp(bestn(s, p), u).
è¯æ:ä»¤bestn(s, p)=m.æ ¹æ®s$\in $sp(p, u), å¯ä»¥å¾å°:
ç±äºmæ¯så°pçæä¼ä¸ä¸è·³, å æ­¤:
æ ¹æ®å¬å¼(6)åå¬å¼(7)å¯ç¥, cost(p, u)=cost(p, m)+cost(m, s)+cost(s, u).
å æ­¤, cost(m, u)=cost(m, s)+cost(s, u).å³, s$\in $sp(bestn(s, p), u).
ä¸é¢ç»åºå®ç2çè¯¦ç»è¯æè¿ç¨.
è¯æå®ç2:
é¦åè¯æèç¹y$\in $V'.ç¨åè¯æ³æ¥è¯æ.åè®¾y$\notin $V', æ ¹æ®å¼ç2å¯ç¥, y$\in $subtree(s, u), å æ­¤s$\in $sp(y, u), æ ¹æ®å¼ç3, s$\in $sp(bestn(s, y), u), ä¸bestn(s, y)$\in $backn(s, u)çç¾.å æ­¤, y$\in $V'.
ä¸é¢ä½¿ç¨åè¯æ³æ¥è¯æè¯¥å®ç.åè®¾ä¸å­å¨ä»»ä½é¾è·¯(x, y)ä½¿x$\in $subtree(s, u)åy$\notin $subtree(s, u)ä¸bestn(s, y)$\in $ backn(s, u)åæ¶æç«.å³:å¯¹äºä»»æèç¹y, ä¸è¯¥èç¹ç¸è¿çå¦å¤ä¸ç«¯åªè½å¨éåV-subtree(s, u)ä¸­, æ ¹æ®å¼ç2å¯ç¥, V-subtree(s, u)=subtree(u, s)+V'å¹¶ä¸y$\in $V', å æ­¤sp(y, u)å¿ç»è¿subtree(u, s)ä¸­çèç¹, æ ¹æ®é¾è·¯å¯¹ç§°å¯ç¥s$\in $sp(y, u), æ ¹æ®å¼ç3å¯ç¥s$\in $sp(bestn(s, y), u), ä¸bestn(s, y)$\in $backn(s, u)çç¾.å æ­¤, å®çå¾è¯.
å®ç3.å½ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, èç¹bestn(s, y)$\in $backn(s, u)æç«çååæ¡ä»¶æ¯ä»¥ä¸3ä¸ªæ¡ä»¶åæ¶æç«:
(1)       (s, u)$\in $sp(s, u);
(2) å­å¨ä¸æ¡é¾è·¯(x, y), ä»èä½¿å¾x$\in $subtree(s, u)ä¸y$\notin $subtree(s, u)ä¸yâ s;
(3) 2Â·cost(s, u) > cost(s, x)+cost(x, y)+cost(s, y)-2Â·cost(s, bestn(s, y))
è¯æ:è¯¥å®çä¸­çåä¸¤ä¸ªæ¡ä»¶å·²ç»å¨å®ç2ä¸­ç»åºäºè¯æ.ä¸é¢åææ¡ä»¶(3).
ä»¤bestn(s, y)=m, å æ­¤å¾å°
ç±äºx$\in $subtree(s, u), å¾åº:
å°å¬å¼(8)åå¬å¼(9)å¸¦å¥å¬å¼æ¡ä»¶(3)ä¸­, å¯ä»¥å¾å°:
ç±äºcost(m, y)+cost(y, x)+cost(x, u)â¥cost(m, u), æä»¥cost(m, s)+cost(s, u) > cost(m, u).
å æ­¤s$\notin $sp(m, u), å³m$\in $backup(s, u).å æ­¤, è¯¥å®çæç«.
å®ç3ç»åºäºä¸ºèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³çååæ¡ä»¶, åä¸¤ä¸ªæ¡ä»¶å·²ç»å¨å®ç2ä¸­ç»åºäºè¯æ.ç¬¬3ä¸ªæ¡ä»¶æ¯èç¹é´å¿é¡»æ»¡è¶³çå®éå³ç³», è¯¥æ¡ä»¶ä¸­çææåéå¼é½å¯ä»¥ä»é¾è·¯ç¶ææ°æ®åºåspt(s)ä¸­å¾å°.å æ­¤, æ ¹æ®è¯¥å¬å¼å¾å®¹æå¤æ­èç¹bestn(s, y)æ¯å¦æ»¡è¶³å¤ä»½ä¸ä¸è·³.
å¨spt(s)ä¸­, å¦æé¾è·¯(s, u)$\in $spt(s), å½èç¹uåºç°æéæ¶, èç¹séè¦ä¸ºchild(s, u)ä¸­çèç¹è®¡ç®å¤ä»½ä¸ä¸è·³.ç±æ­¤å¯ç¥:ä¸ºäºä¿æ¤ææ¡é¾è·¯, èç¹såªéè¦ä¸ºä¸ä¸ªèç¹è®¡ç®å¤ä»½ä¸ä¸è·³.ç¶èä¸ºäºä¿æ¤æä¸ªèç¹, èç¹séè¦ä¸ºè¯¥èç¹çææå­©å­èç¹è®¡ç®å¤ä»½ä¸ä¸è·³.
å®ç4æä¾äºå¦ä½ä¸ºèç¹uçå­©å­èç¹vè®¡ç®å¤ä»½ä¸ä¸è·³çæ¹æ³.å®ç5ç»åºäºèç¹ä¿æ¤æ¡ä»¶.è¿ä¸¤ä¸ªå®çåé¾è·¯ä¿æ¤æ¡ä»¶ä¸­çå®çç¸ä¼¼, å æ­¤ä¸åå·ä½è¯´æ.
å®ç4.å½ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, å¦æ(s, u)$\in $sp(s, v), (u, v)$\in $sp(s, v), backn(s, v)â $\emptyset $åå¿å®å­å¨ä¸æ¡é¾è·¯(x, y), ä½¿å¾x$\in $subtree(s, v), y$\notin $subtree(s, u)åbestn(s, y)$\in $backn(s, v)åæ¶æç«.
å®ç5.ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, èç¹bestn(s, y)$\in $backup(s, v)æç«çååæ¡ä»¶æ¯ä»¥ä¸3ä¸ªæ¡ä»¶åæ¶æç«:
(1)       (s, u)$\in $sp(s, v)å¹¶ä¸(u, v)$\in $sp(s, v);
(2) å­å¨ä¸æ¡é¾è·¯(x, y), ä»èä½¿å¾x$\in $subtree(s, v)ä¸y$\notin $subtree(s, u)ä¸yâ s;
(3) 2Â·cost(s, v) > cost(s, x)+cost(x, y)+cost(s, y)-2Â·cost(s, bestn(s, y)).
ç®æ³1æè¿°äºå¦ä½ä¸ºèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³:é¦å, å°èç¹såsubtree(s, u)ä¸­çææèç¹æ è®°ä¸ºçº¢è²(ç®æ³1ç¬¬1è¡ãç¬¬2è¡); éåå­æ subtree(s, u)ä¸­çææèç¹(ç®æ³1ç¬¬4è¡); å¯¹äºè¯¥å­æ ä¸­çä»»æèç¹x, è®¿é®å¶æ¯ä¸ä¸ªé»å±èç¹y, å¤æ­å¶æ¯å¦æ»¡è¶³å®ç3ä¸­çæ¡ä»¶(ç®æ³1ç¬¬6è¡~ç¬¬9è¡); å¨æ¾å°çæææ»¡è¶³æ¡ä»¶çèç¹yä¸­, éæ©ä¿æ¤è·¯å¾æç­çä¸ä¸ªä½ä¸ºæç»èç¹(ç®æ³1ç¬¬10è¡); æå, ç®æ³è¿åèç¹uçå¤ä»½ä¸ä¸è·³.
ç®æ³1. SynLinkProtection.
Input: SPT(s), u, G=(V, E);
Output: backn(s, u).
1:Â Â å°subtree(s, u)ä¸­ææèç¹æ è®°ä¸ºçº¢è²;
2:Â Â å°èç¹sæ è®°ä¸ºçº¢è²
3:Â Â minââ
4:Â Â For x$\in $subtree(s, u) do
5:Â Â Â Â For y$\in $neighbor(x) do

6:Â Â Â Â Â Â Ifèç¹yæ¯çº¢è²çorå®ç3(3)ä¸æç«or cost(s, y)+w(x, y)-cost(s, u)+cost(s, x)â¥min

7:Â Â Â Â Â Â Â Â continue
8:Â Â Â Â Â Â EndIf
9:Â Â Â Â Â Â backn(s, u)âbackn(s, y)
10:minâcost(s, y)+w(x, y)+cost(s, x)-cost(s, u)
11:Â Â Â Â EndFor
12:EndFor
13:return backn(s, u);
ç®æ³1æè¿°äºèç¹så¦ä½ä¸ºä¸å¶ç´è¿çèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³çè¿ç¨.ç¶è, ä¸ºäºä¿æ¤ææä¸èç¹sç´æ¥ç¸è¿çé¾è·¯, èç¹séè¦ä¸ºå¶ç´è¿çææèç¹è®¡ç®å¤ä»½ä¸ä¸è·³, è¿å°éè¦è¿è¡å¤æ¬¡ç®æ³1æ¥å®ç°.ä¸é¢æ¥åæç®æ³çå¤æåº¦.
å®ç6.å½ç½ç»ä¸­é¾è·¯çæå¼å¯¹ç§°æ¶, èç¹sä¸ºææä¸å¶ç´è¿çèç¹è®¡ç®å¤ä»½ä¸ä¸è·³çæ¶é´å¤æåº¦ä¸ºO(2Â·E+V).
è¯æ:åè®¾èç¹sæmä¸ªé»å±èç¹, åä¸ºäºä¿æ¤ä¸å¶ç´æ¥ç¸è¿çææé¾è·¯, éè¦è¿è¡mæ¬¡ç®æ³1.å¨è¿è¡mæ¬¡ç®æ³1çè¿ç¨ä¸­, é¤å»èç¹så¤, ç½ç»ä¸­æ¯ä¸ªèç¹æå¤è¢«è®¿é®ä¸æ¬¡, èæ¯æ¡é¾è·¯åæå¤è¢«è®¿é®ä¸¤æ¬¡, å æ­¤ç®æ³çæ¶é´å¤æåº¦ä¸ºO(2Â·E+V).
æ ¹æ®å®ç4å¯ç¥:ä¸ºäºå®ç°èç¹ä¿æ¤ç®æ³, åªéè¦å°é¾è·¯ä¿æ¤ç®æ³ä¸­ææçåéuæ¹ä¸ºvå³å¯.èç¹ä¿æ¤ç®æ³ç¨SynNodeProtectionè¡¨ç¤º.å æ­¤, è¯¥ååå°ä¸ä¼å½±åç®æ³çæ¶é´å¤æåº¦.å æ­¤, èç¹ä¿æ¤ç®æ³çå¤æåº¦ä»ç¶æ¯O(2Â·E+V).
ä»¥ä¸è®¨è®ºäºå¯¹ç§°é¾è·¯æå¼ç½è·¯ä¸­çé¾è·¯ä¿æ¤ç®æ³åèç¹ä¿æ¤ç®æ³.å½ç½ç»ä¸­é¾è·¯çæå¼ä¸å¯¹ç§°æ¶, å°ä¸è½éç¨ä¸è¿°ç®æ³æ¥è§£å³è¯¥é®é¢.è¿æ¯å ä¸ºä¸è¿°å®ç2~å®ç5é½æ¯å¨å¯¹ç§°é¾è·¯æå¼çæ¡ä»¶ä¸ææç«ç, å¨éå¯¹ç§°é¾è·¯æå¼æ¡ä»¶ä¸, ä¸è¿°å®çä¸åæç«, å æ­¤å½ç½ç»ä¸­é¾è·¯çæå¼ä¸å¯¹ç§°æ¶, éè¦è®¾è®¡ä¸ç§æ°çæ¹æ³æ¥è§£å³è¯¥é®é¢.
æ ¹æ®å®ç1å¯ç¥:å¨spt(s)ä¸­, å½é¾è·¯(s, u)$\in $spt(s)æ¶, ä¸ºäºä¿æ¤é¾è·¯(s, u), èç¹séè¦ä¸ºèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³.å®ç7ç»åºäºè®¡ç®é¾è·¯ä¿æ¤çæ¹æ³, æ ¹æ®å®ç7å¯ç¥:å¦ææä¸ªèç¹æ¯sçé»å±èç¹, å¹¶ä¸è¯¥èç¹å°èç¹uçæç­è·¯å¾ä¸ç»è¿s, åè¯¥èç¹å¯ä»¥ä½ä¸ºèç¹uçå¤ä»½ä¸ä¸è·³.
å®ç7.å¦æ(s, u)$\in $sp(s, u), backn(s, u)â $\emptyset $æç«, åéåneighbor(s)$\cap $(V-rsubtree(s))ä¸­çææèç¹é½å¯ä»¥ä½ä¸ºèç¹uçå¤ä»½ä¸ä¸è·³, å³neighbor(s)$\cap $(V-rsubtree(s))$\subset $backn(s, u).
è¯æ:å©ç¨åè¯æ³æ¥è¯æè¯¥å®ç.åè®¾m$\in $neighbor(s)$\cap $(V-rsubtree(s)), ä½æ¯è¯¥èç¹m$\notin $backn(s, u), åèç¹må°uçæç­è·¯å¾å¿å®ç»è¿èç¹s.å ä¸ºm$\in $V-rsubtree(u, s), åèç¹må°uçæç­è·¯å¾å¿å®ä¸ç»è¿èç¹s, å¾åºçç¾.å æ­¤å®çå¾è¯.
ä¸ºäºå®ç°å®ç7, èç¹séè¦å¯»æ¾å±äºéåneighbor(s)$\cap $(V-rsubtree(s))ä¸­çèç¹, å¶ä¸­, neighbor(s)å¾å®¹æå¤æ­, ç¶èä¸ºäºå¤æ­èç¹æ¯å¦å±äºéåV-rsubtree(u, s), éè¦æé ä»¥uä¸ºæ ¹çååæç­è·¯å¾æ rspt(u).ä½æ¯å¨å®éè®¡ç®è¿ç¨ä¸­, å¹¶æ²¡æå¿è¦æé å®æ´çrspt(u), å ä¸ºåªè¦è®¡ç®åºèç¹uçå¤ä»½ä¸ä¸è·³, ç®æ³å°±å¯ä»¥ç»æ­¢, å æ­¤å¯ä»¥éä½ç®æ³çæ§è¡æ¶é´.å½è¯¥èç¹å­å¨å¤ä¸ªå¤ä»½ä¸ä¸è·³æ¶, ç®æ³å°½ééæ©éè·¯ç±è·¯å¾ä»£ä»·æå°çèç¹ä½ä¸ºå¤ä»½ä¸ä¸è·³.åªæå½è¯¥èç¹æ å¯ç¨å¤ä»½ä¸ä¸è·³æèåªæä¸ä¸ªå¤ä»½ä¸ä¸è·³æ¶, ææå¯è½è®¡ç®å®æ´çrspt(u), å¶ä»æåµåªéè¦æé é¨årspt(u)å³å¯.å®ç7ç»åºäºè®¡ç®é¾è·¯ä¿æ¤çæ¹æ³:æé ä»¥èç¹uä¸ºæ ¹çååæç­è·¯å¾æ rspt(u), å½æä¸ªèç¹må å¥å°rspt(u)æ¶, å¤æ­è¯¥èç¹æ¯å¦å±äºéåneighbor(s)$\cap $(V-rsubtree(s)):å¦æmå±äºä¸è¿°éå, åm$\in $ backn(s, u); å¦åç»§ç»­å å¥å¶ä»èç¹, ç´å°æ¾å°èç¹uçå¤ä»½ä¸ä¸è·³.ä¸é¢éè¿å®ç8æ¥è¯´æå©ç¨å®ç7è®¡ç®åºçéè·¯ç±è·¯å¾å·ææå°ä»£ä»·, ä»èéä½éè·¯ç±è·¯å¾æä¼¸åº¦.
å®ç8.å¦æm$\in $backn(s, u), åä¸å­å¨èç¹n$\in $backn(s, u)ä½¿å¾cost(n, u) < cost(m, u).
è¯æ:ä¸é¢å©ç¨åè¯æ³æ¥è¯æè¯¥å®ç.åè®¾å­å¨èç¹n$\in $backn(s, u)ä½¿å¾cost(n, u) < cost(m, u), åå¯ä»¥å¾å°èç¹næ¯èç¹måå å¥å°ä»¥uä¸ºæ ¹çæç­è·¯å¾æ ä¸­.ç¶èè¿ä¸å¯è½ç, å ä¸ºåªè¦åºç°ç¬¦åå¤ä»½æ¡ä»¶çèç¹å å¥å°è¯¥æ ä¸­, ç®æ³ç«å³ç»æ­¢, å æ­¤åè®¾ä¸æç«.å®çå¾è¯.
å¨spt(s)ä¸­, å¦æé¾è·¯(s, u)$\in $spt(s), å½èç¹uåºç°æéæ¶, èç¹séè¦ä¸ºchild(s, u)ä¸­çèç¹è®¡ç®å¤ä»½ä¸ä¸è·³.å æ­¤ä¸ºäºä¿æ¤æä¸ªèç¹, èç¹séè¦ä¸ºè¯¥èç¹çææå­©å­èç¹è®¡ç®å¤ä»½ä¸ä¸è·³.
å®ç9ç»åºäºæä¾äºå¦ä½ä¸ºèç¹uçå­©å­èç¹vè®¡ç®å¤ä»½ä¸ä¸è·³çæ¹æ³:æé ä»¥èç¹vä¸ºæ ¹çååæç­è·¯å¾æ rspt(v), å½æä¸ªèç¹må å¥å°rspt(v)æ¶, å¤æ­è¯¥èç¹æ¯å¦å±äºéåneighbor(s)$\cap $(V-rsubtree(v, s)-rsubtree(v, u)):å¦æmå±äºä¸è¿°éå, åm$\in $backn(s, v); å¦åç»§ç»­å å¥å¶ä»èç¹, ç´å°æ¾å°èç¹vçå¤ä»½ä¸ä¸è·³.
å®ç9.å¦æ(s, u)$\in $sp(s, v), (u, v)$\in $sp(s, v), neighbor(s)$\cap $(V-rsubtree(v, s)-rsubtree(v, u))ä¸­çææèç¹é½å¯ä»¥ä½ä¸ºèç¹vçå¤ä»½ä¸ä¸è·³, å³:neighbor(s)$\cap $(V-rsubtree(v, s)-rsubtree(v, u))$\subset $backn(s, v).
å®ç9çè¯æè¿ç¨åå®ç7çè¯æè¿ç¨ç±»ä¼¼, å æ­¤ä¸åå¯¹å¶è¯æ.
ç®æ³2æè¿°äºå¦ä½ä¸ºèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³, ç®æ³éè¦æé ä»¥èç¹uä¸ºæ ¹çååæç­è·¯å¾æ rspt(u).é¦å, å°èç¹såsubtree(s, u)ä¸­ææèç¹æ è®°ä¸ºçº¢è²(ç®æ³2ä¸­çç¬¬1è¡ãç¬¬1è¡); éè¿åå§åæä½, å°èç¹uå å¥å°ä¼åçº§éåQä¸­(ç®æ³2ä¸­çç¬¬3è¡~ç¬¬9è¡); æé æ è¦ç»åä¸ç³»åçè¿­ä»£è¿ç¨, å¨æ¯ä¸æ¬¡è¿­æä¸­, ä»ä¼åçº§éåä¸­éåä»£ä»·æå°çèç¹y(ç®æ³2ä¸­çç¬¬11è¡); å¦æå¶ç¶äº²èç¹çé¢è²æ¯çº¢è², åå°è¯¥èç¹æ è®°ä¸ºçº¢è²(ç®æ³2ä¸­çç¬¬13è¡~ç¬¬15è¡); å¦æè¯¥èç¹ä¸æ¯çº¢è²å¹¶ä¸è¯¥èç¹æ¯sçé»å±èç¹, åè¯¥èç¹å³æ¯èç¹uçå¤ä»½ä¸ä¸è·³; å¦å, æ´æ°è¯¥èç¹çä¿¡æ¯, å¹¶ä¸å°è¯¥èç¹å å¥å°æ ä¸­(ç®æ³2ä¸­çç¬¬20è¡~ç¬¬22è¡); è®¿é®èç¹yçææé»å±èç¹, æ´æ°è¿äºé»å±èç¹çä¿¡æ¯(ç®æ³2ä¸­çç¬¬24è¡~ç¬¬31è¡);
âÂ Â å¦ææ¯éå¯¹èç¹ä¿æ¤é®é¢, ååªéè¦å°é¾è·¯ä¿æ¤ç®æ³ä¸­ææçåéuæ¹ä¸ºvå³å¯.
ç®æ³2.AsyLinkProtection.
Input: SPT(s), u, G=(V, E);
Output: backn(s, u).
1:Â Â å°subtree(s, u)ä¸­ææèç¹æ è®°ä¸ºçº¢è²
2:Â Â å°èç¹sæ è®°ä¸ºçº¢è²
3:Â Â For x$\in $V do
4:Â Â Â Â cost(u, x)ââ
5:Â Â Â Â u.visitedâfalse
6:Â Â EndFor;
7:Â Â u.visitedâtrue
8:Â Â cost(u, u)â0
9:Â Â Enqueue(Q, (u, u, 0));
10:Â Â While Q is not empty do
11:Â Â Â Â ãy, p, tcãâExtractMin(Q)
12:Â Â Â Â If yâ u then
13:Â Â Â Â Â Â If parent(u, y)æ¯çº¢è²then
14:Â Â Â Â Â Â Â Â å°èç¹yæ è®°ä¸ºçº¢è²

15:Â Â Â Â Â Â EndIf
16:Â Â Â Â Â Â If yä¸æ¯çº¢è²å¹¶ä¸y$\in $neighbor(s) then
17:Â Â Â Â Â Â Â Â backn(s, u)ây
18:Â Â Â Â Â Â Â Â return;
19:Â Â Â Â EndIf
20:Â Â Â Â Â Â y.visitedâtrue
21:Â Â Â Â parent(u, y)âp
22:Â Â Â Â Â Â cost(u, y)âtc
23:Â Â Â Â EndIf
24:Â Â Â Â For q$\in $neighbor(y) do
25:Â Â Â Â If q.visitedâfalse then
26:Â Â Â Â Â Â newdistâcost(y, u)+w(q, y)
27:Â Â Â Â Â Â Â Â If newdistâ¤cost(q, u) then
28:Â Â Â Â Â Â Â Â Enqueue(Q, (u, q, newdist))
29:Â Â Â Â Â Â EndIf
30:Â Â Â Â EndIf
31:Â Â Â Â EndFor
32:EndWhile
æ ¹æ®å®ç9å¯ç¥:ä¸ºäºå®ç°èç¹ä¿æ¤ç®æ³, åªéè¦å°é¾è·¯ä¿æ¤ç®æ³ä¸­ææçåéuæ¹ä¸ºvå³å¯.èç¹ä¿æ¤ç®æ³ç¨AsyNodeProtectionè¡¨ç¤º.
ä»ç¬¬3èåç¬¬4èçæè¿°å¯ç¥, æ¬ææåºäºä¸¤ç§é«æçLFAå®ç°æ¹æ³.
AsyLinkProtectionåAsyNodeProtectionç®æ³ä¸éè¦èèç½ç»ä¸­é¾è·¯æå¼æ¯å¦å¯¹ç§°, å æ­¤éç¨èå´æ´å å¹¿æ³.SynLinkProtectionåSynNodeProtectionåªéç¨äºé¾è·¯æå¼å¯¹ç§°çç½ç».å½ç½è·¯åºç°åæéæ¶, æ¬ææåºçç®æ³åªéè¦ä¸ºç¹å®çèç¹è®¡ç®å¤ä»½ä¸ä¸è·³, æ ¹æ®å®ç1å¯ç¥, å¶å­æ ä¸­ææèç¹çå¤ä»½ä¸ä¸è·³åè¯¥ç¹å®èç¹çå¤ä»½ä¸ä¸è·³æ¯ç¸åç.å¨æäºæåµä¸, å½æä¸ªç¹å®èç¹ä¸å­å¨å¤ä»½ä¸ä¸è·³æ¶, å©ç¨æ¬ææåºçç®æ³å°å¯¼è´è¯¥èç¹å¯¹åºçå­æ ä¸­ææèç¹æ æ³æ¾å°å¤ä»½ä¸ä¸è·³.å æ­¤, å©ç¨æ¬ææåºçç®æ³å¯è½ä¼æ¼ææäºèç¹çå¤ä»½ä¸ä¸è·³.å æ­¤, ä¸ºäºæé«æéä¿æ¤ç, å¨æ§è¡ä¸è¿°ç®æ³çè¿ç¨ä¸­, å¦ææä¸ªèç¹æ²¡æå¤ä»½ä¸ä¸è·³, åå°ç¹å®èç¹çè®¡ç®èå´æ©å¤§å°è¯¥èç¹çä¸ä¸è·³.ä¾å¦å¨å¾ 1ä¸­, ä¸ºäºä¿æ¤é¾è·¯(s, u), èç¹såªéä¸ºèç¹uè®¡ç®å¤ä»½ä¸ä¸è·³, å ä¸ºuå¯¹åºçå­æ ä¸­ææèç¹çå¤ä»½ä¸ä¸è·³æ¶ç¸åç, å¦æèç¹uä¸å­å¨å¤ä»½ä¸ä¸è·³æ¶, åä¸ºèç¹båcè®¡ç®å¤ä»½ä¸ä¸è·³.ä»ä¸é¢çå®éªå¯ä»¥çåº, è¯¥è¿ç¨ä¸ä¼ææ¾å¢å ç®æ³çè®¡ç®å¼é, å æ­¤å°ç¹å®èç¹çèå´æ©å¤§å°ä¸ä¸è·³æ¯æé«æéä¿æ¤ççä¸ç§ææè§£å³æ¹æ¡.
(1) å®éªææ
ä¸ºäºå¨é¢åç¡®è¯ä»·ç®æ³çæ§è½, éç¨3ç§ç±»åçææè¿è¡æ¨¡æå®éª, åæ¬:çå®ææAbilene[43]ãå©ç¨Rocketfuel[44]æµéçææç»æãå©ç¨Brite[45]æ¨¡æè½¯ä»¶çæçææç»æ.
1) Abileneæ¯ç¾å½çæè²åç§ç ç½ç», å¶åå«11ä¸ªè·¯ç±å¨å14æ¡é¾è·¯;
2) Rocketfuelé¡¹ç®å¬å¸äºå¤§éçæµéææç»æ, æä»¬éæ©å¶ä¸­ç6ä¸ªä½ä¸ºå®éªææ, å·ä½åæ°è§è¡¨ 2;
3) å©ç¨å¼æºè½¯ä»¶Briteçæææç»æ, Briteçå·ä½åæ°è§è¡¨ 3.
(2) è¯ä»·ææ 
ç±äºæ¬ææåºçç®æ³ä¸»è¦éå¯¹IPFRRä¸­çLFAæ¹æ³è¿è¡æ¹è¿, å æ­¤ä¸ºäºè¯ä»·æ¬æç®æ³çæ§è½, å¨å®éªä¸­å°ä¸LFAæ¹æ³ãTBFHè¿è¡æ¯è¾.è¯ä»·ææ åæ¬è®¡ç®å¼éãè·¯å¾æä¼¸åº¦åæéä¿æ¤ç.ä¸é¢ä»ç»è¯¦ç»çå®éªæ¹æ³.
æ¬æå©ç¨C++è¯­è¨å®ç°äºLFA, TBFHåæ¬ææåºçæ¹æ¡.å¨å®éªä¸­, ä»ä»ååºäºå¯¹ç§°ç½ç»ä¸­çå®éªæ°æ®, èéå¯¹ç§°ç½ç»ä¸­çç»æä¸ä¹åºæ¬ç±»ä¼¼, å æ­¤æ²¡æè¯¦ç»ååº.
ä¸ºäºé¿åè¿è¡ç¯å¢å¯¹ç®æ³æ§è½çå½±å, æ¬æéç¨ç¸å¯¹è®¡ç®æ¶é´æ¥è¡¡éä¸åç®æ³çè®¡ç®æç.ç¸å¯¹è®¡ç®æ¶é´å¯ä»¥å®ä¹ä¸º:ç¸å¯¹è®¡ç®æ¶é´=ç®æ³å®éè¿è¡æ¶é´/æé æç­è·¯å¾æ æ¶é´.ä»å®ä¹ä¸­å¯ä»¥çåº, ç¸å¯¹è®¡ç®æ¶é´è¡¨ç¤ºæé æç­è·¯å¾æ çæ¬¡æ°.ä¸é¢éè¿æ¨¡æå®éªè¯ä»·ä¸åç®æ³çç¸å¯¹è®¡ç®æ¶é´.
é¦å, æä»¬è¯´æçå®ææåRocketfuelæµéææçè®¡ç®ç»æ.å¾ 2åå¾ 3åå«æç»äºä¸åç®æ³å¨ä¸è¿°ææä¸é¾è·¯ä¿æ¤åèç¹ä¿æ¤çç¸å¯¹è®¡ç®æ¶é´.å¯ä»¥çåº, æ¬ææåºçç®æ³çæ§è¡æçææ¾ä¼äºLFAç®æ³åTBFHç®æ³.å¨é¾è·¯ä¿æ¤ä¸­, SynLinkProtectionåAsyLinkProtectionçè®¡ç®å¼éåºæ¬æ¥è¿.å¨èç¹ä¿æ¤ä¸­, è½ç¶AsyNodeProtectionçè®¡ç®å¼éç¥å¤§äºSynNodeProtectionçè®¡ç®å¼é, ä½æ¯ææ¾ä¼äºLFAçæ§è½, è¿æ¯å ä¸ºSynNodeProtectionç®æ³å¹¶ä¸éè¦æé ä¸æ£µå®æ´çæç­è·¯å¾æ , èAsyNodeProtectionå¨æäºæåµä¸å¯è½éè¦æé å¤æ£µå®æ´çæç­è·¯å¾æ .
æ¥ç, ä»ç»ä¸åç®æ³å¨Briteçæææä¸çè¿è¡ç»æ.å¾ 4åå¾ 5åå«æè¿°äºå½ç½ç»èç¹çå¹³ååº¦ä¸º6, é¾è·¯ä¿æ¤ç®æ³åèç¹ä¿æ¤ç®æ³çè®¡ç®æçéçç½ç»è§æ¨¡çååè§å¾.
å¾ 6åå¾ 7åå«æè¿°äºå½ç½ç»ææå¤§å°ä¸º1 000, é¾è·¯ä¿æ¤ç®æ³åèç¹ä¿æ¤ç®æ³çè®¡ç®æçéçç½ç»èç¹çå¹³ååº¦ååè§å¾.
ä»ä¸è¿°å¾å¯ä»¥å¾åº:å½ç½ç»èç¹çå¹³ååº¦ç¡®å®å, ææç®æ³çç¸å¯¹è®¡ç®æ¶é´åºæ¬ä¸åç½ç»è§æ¨¡çå½±å.å½ç½ç»è§æ¨¡ç¡®å®å, LFAç®æ³éçç½ç»èç¹å¹³ååº¦çå¢å èå¢å ; æ¬ææåºçç®æ³åTBFHç®æ³åºæ¬ä¸åè¯¥å ç´ çå½±å, ç¶èTBFHçæ§è¡æçææ¾ä½äºæ¬ææåºçç®æ³.
å½ç½ç»åºç°æéæ¶, å©ç¨è·¯ç±ä¿æ¤ç®æ³è®¡ç®åºçéè·¯ç±è·¯å¾å¹¶ä¸æ¯éå¯¹æ°çææç»æè®¡ç®çæç­è·¯å¾, å æ­¤, å©ç¨è·¯ç±ä¿æ¤ç®æ³è®¡ç®åºçéè·¯ç±è·¯å¾çä»£ä»·ä¸å®å¤§äºæ°ææå¯¹åºçæç­è·¯å¾ä»£ä»·, å¿ç¶å¼èµ·è·¯å¾çæä¼¸.å æ­¤, æ¬èå©ç¨è·¯å¾æä¼¸åº¦æ¥è¡¡ééè·¯ç±è·¯å¾çä¼å£.è·¯å¾æä¼¸åº¦å¯ä»¥å®ä¹ä¸º:è·¯å¾æä¼¸åº¦=éè·¯ç±è·¯å¾çä»£ä»·/æç­è·¯å¾ä»£ä»·.å æ­¤, å½ç½ç»åºç°æéæ¶, è·¯ç±æä¼¸åº¦è¶å°, å¯¹åºçéè·¯ç±è·¯å¾è¶æ¥è¿æç­è·¯å¾, ç«¯å°ç«¯å»¶è¿è¶å°.æ¬å°èå°è¯ä»·å½ç½ç»ä¸­åçåæéæ¶(åé¾è·¯æèåèç¹), ä¸åç®æ³å¯¹åºçè·¯å¾æä¼¸åº¦.ä¸é¢ä»ç»å®éªæ¹æ³, å¯¹äºä»»æææç»æ, éæºéæ©ä¸æ¡é¾è·¯æ­å¼, ç¶åæ§è¡ä¸è¿°ç®æ³, è®¡ç®ä¸åç®æ³å¯¹åºçè·¯å¾æä¼¸åº¦.å¨å®éªä¸­, éæ©50%çé¾è·¯æ§è¡ä¸è¿°æä½, æååå¹³åå¼.éå¤ä¸è¿°å®éª100æ¬¡, æåå¾å°å®éªç»æ.ä¸é¢æè¿°äºé¾è·¯ä¿æ¤çå®éªæ¹æ³, èç¹ä¿æ¤çæ¹æ³åä¸è¿°æ¹æ³ç±»ä¼¼, å æ­¤ä¸åä»ç».å¨å®éªæ¯è¾ä¸­, å¯¹äºLFAåTBFHæ¹æ¡, å¦æå­å¨å¤ä¸ªå¤ä»½ä¸ä¸è·³, åä»ä¸­éæºéæ©ä¸ä¸ªä½ä¸ºå¶å¤ä»½ä¸ä¸è·³.
é¦å, æä»¬ä»ç»ä¸åç®æ³å¨çå®ææåRocketfuelæµéææçå®éªç»æ.å¾ 8åå¾ 9åå«æè¿°äºä¸åç®æ³å¯¹åºçé¾è·¯ä¿æ¤åèç¹ä¿æ¤çè·¯å¾æä¼¸åº¦.
ä»å¾ä¸­å¯ä»¥çåº, LFAåTBFHçè·¯å¾æä¼¸åº¦ææ¾é«äºæ¬ææåºçç®æ³.ä¸è®ºå¨é¾è·¯ä¿æ¤è¿æ¯å¨èç¹ä¿æ¤, æ¬ææåºçä¸¤ç§æ¹æ¡çè·¯ç±æä¼¸åº¦åºæ¬ä¸è´.è¿æ¯å ä¸ºæä»¬æåºæ¹æ¡éæ©ä»£ä»·æå°çè·¯å¾ä½ä¸ºéè·¯ç±è·¯å¾, èLFAåTBFHéæºéæ©å¶ä¸­ä¸ä¸ªä½ä¸ºéè·¯ç±è·¯å¾, ä»èå¯¼è´å¶éè·¯ç±è·¯å¾æä¼¸åº¦è¾å¤§.
æ¥çä»ç»ä¸åç®æ³å¨Briteçæææä¸çè¿è¡ç»æ.å¾ 10åå¾ 11åå«æè¿°äºå¯¹åºçé¾è·¯ä¿æ¤åèç¹ä¿æ¤çè·¯å¾æä¼¸åº¦.ä»å¾ä¸­å¯ä»¥å¾åº, ç®æ³å¨çæææçè¿è¡çç»æåå¨æµéææçè¿è¡ç»æåºæ¬ä¸è´.
æ¬èå°ç¨æéä¿æ¤çæ¥è¡¡éä¸åç®æ³åºå¯¹æéçè½å.æéä¿æ¤çå¯ä»¥å®ä¹ä¸º:
å¶ä¸­,
å¯¹äºç½ç»ä¸­ä»»æèç¹$\forall $s, d$\in $V, å¦æså°då·æå¤ä»½ä¸ä¸è·³, åB(s, d)=1;å¦å, B(s, d)=0.
å¾ 12åå¾ 13åå«æè¿°äºä¸åç®æ³å¨çå®ææãRocketfuelæµéææå¯¹åºçé¾è·¯ä¿æ¤åèç¹ä¿æ¤çæéä¿æ¤ç.
ä»å¾ä¸­å¯ä»¥çåº, æ¬ææåºçç®æ³åLFAç®æ³çæéä¿æ¤çåºæ¬ä¸è´.å æ­¤, ä¸LFAæ¯è¾, æ¬ææåºçç®æ³ä¸ä¼éä½è·¯ç±å¯ç¨æ§, TBFHç®æ³éä½äºè·¯ç±å¯ç¨æ§.
æ¬ææåºçæ¹æ¡åäºèç½é¨ç½²çååè·¯ç±åè®®æ¯å¼å®¹ç, å æ­¤å¯ä»¥å¨ç½ç»ä¸­å¢éé¨ç½²è¯¥æ¹æ¡.å¢éé¨ç½²æ¹æ¡å¯ä»¥æè¿°ä¸º:ç»å®å·ä½çç½ç»ææç»åé¨ç½²èç¹æ°é, éæ©åéçèç¹é¨ç½²ä¸è¿°ç®æ³, ä»èä½¿å¾æéä¿æ¤çæé«.å ä¸ºç½ç»ä¸­ä¸åèç¹çéè¦ç¨åº¦æ¯ä¸ç¸åç, å æ­¤å®éªä¸­éç¨èç¹çä»æ°æ¥è¡¡éèç¹çéè¦ç¨åº¦.ä¸é¢ä½¿ç¨è´ªå¿ç®æ³æ¥è§£å³è¯¥é®é¢:é¦å, æç§èç¹çä»æ°å¯¹ç½ç»ä¸­ææèç¹è¿è¡éåºæå; å¶æ¬¡, æ¯æ¬¡ä»éåé¦é¨éæ©ä¸ä¸ªèç¹é¨ç½²ä¸è¿°ç®æ³, ç´å°ä¸æ»¡è¶³é¨ç½²æ¡ä»¶è¦æ±.
å¾ 14åå¾ 15åå«æè¿°äºé¾è·¯ä¿æ¤ç®æ³åèç¹ä¿æ¤ç®æ³å¨Sprintææä¸é¨ç½²èç¹æ°éåæéä¿æ¤çä¹é´çè§å¾.ä»è¯¥å¾å¯ä»¥çåº:éçé¨ç½²èç¹æ°éçå¢å , æéä¿æ¤çéä¹æé«.å½é¨ç½²å¤§çº¦40%å·¦å³çå³é®èç¹æ¶, æéä¿æ¤çå·²ç»å¾å°ææ¾æå.å æ­¤å¨å®éä¸­é¨ç½²æ¶, åºè¯¥å°ä¸åçèç¹åºåå¯¹å¾, ä¼åé¨ç½²éè¦èç¹.
éå¯¹ç®åäºèç½é¨ç½²çLFAç®æ³å¼éå¤§çé®é¢, æ¬æè®¾è®¡äºä¸ç§è½»éçº§çåºäºéè·³æ¹å¼çIPè·¯ç±ä¿æ¤æ¹æ¡.çè®ºåå®éªç»æè¡¨æ:ä¸LFAç®æ³ç¸æ¯è¾, æ¬ææåºçæ¹æ¡ä¸ä»è®¡ç®å¤æåº¦ä½ãè·¯å¾æä¼¸åº¦å°, å¹¶ä¸å¯ä»¥æä¾åæ ·çæéä¿æ¤ç.ç¶è, æ¬æç ç©¶çå¯¹è±¡æ¯ç½ç»ä¸­åæéæå½¢, å æ­¤ä¸ä¸æ­¥ä¸»è¦ç ç©¶å¦ä½å°æ¬æçç®æ³åºç¨äºå¹¶åæéçæå½¢.